plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// 쿼리 파라미터 추가 외부 로그 남기기
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

	// 입력값 검증 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// api 사용 방법을 명세한 문서 라이브러리 (swagger)
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

	// json web token 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// 스프링 시큐리티 모듈
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// 파일 업로드 라이브러리
	implementation 'commons-io:commons-io:2.8.0'

	// https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'

	// https://mvnrepository.com/artifact/io.github.openfeign/feign-soap
	implementation 'io.github.openfeign:feign-soap:10.11'

	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// https://mvnrepository.com/artifact/javax.xml.soap/javax.xml.soap-api
	implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'

	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// S3 라이브러리 아마존 서비스에 접근해서 사용하는
	implementation 'software.amazon.awssdk:s3:2.17.52'

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
//	useJUnitPlatform()
	exclude '**/*' // 빌드 시 전체 테스트 생략
}

